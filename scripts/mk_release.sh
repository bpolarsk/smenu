#!/usr/bin/ksh
set -xv
LOCAL_MODULE=FALSE
while [ -n "$1" ]
do
case "$1" in 
  -h ) "echo mk_release [ -mod ]" ;exit;;
  -mod) LOCAL_MODULE=TRUE;;
esac
shift
done
  
WRK_DIR=/tmp/smenu_$$
MK_DIR=`dirname $SBIN`
SMENU_DIR=`basename $SBIN`

typeset -i to_tail

mkdir -p $WRK_DIR/data
mkdir -p $WRK_DIR/scripts
mkdir -p $WRK_DIR/tmp

cd $MK_DIR
if [ -f $MK_DIR/smenu_tar ];then
   rm $MK_DIR/smenu_tar
fi

# tail +n has some various implmentation on Linux, so we prefer to computre and use tail -n
var=`grep -n ^SBIN $SBINS/addpar.sh | grep -v SBINS| cut -f1 -d':'|awk '{print $1'}`
vart=`cat $SBINS/addpar.sh | wc -l`
tot_line=`expr $vart - $var`
tail -$tot_line $SBINS/addpar.sh > $MK_DIR/addpar.tail
cp $SBINS/README.txt $MK_DIR/README.txt
cp $SBINS/install.sh $MK_DIR/install.sh

chmod 755 $MK_DIR/install.sh
chmod 600 $SBINS/.passwd

if [ "$LOCAL_MODULE" = "FALSE" ];then
   for i in 4 5 6 7 8 9
     do
       if [ -d ./smenu/module$1 ];then
             mv ./smenu/module$1 $WRK_DIR
       fi
     done
fi
cp -p ./$SMENU_DIR/data/*                      $WRK_DIR/data
mv ./$SMENU_DIR/data/sampler*                  $WRK_DIR/data
mv ./$SMENU_DIR/data/stream*                   $WRK_DIR/data
cp -p ./$SMENU_DIR/smenu.env                   $WRK_DIR
cp -p ./$SMENU_DIR/scripts/addpar.sh           $WRK_DIR/scripts
cp -p ./$SMENU_DIR/scripts/.passwd             $WRK_DIR/scripts
mv ./$SMENU_DIR/data/smenu_sid_version.txt     $WRK_DIR/data 
mv ./$SMENU_DIR/data/smenu_default_user.txt    $WRK_DIR/data

rm $SBIN/smenu.env
for i in `ls $SBIN/tmp`
  do
   mv $SBIN/tmp/$i $WRK_DIR/tmp
done

if [ -d $SBIN/log ];then
  for i in `ls $SBIN/log`
     do
       rm $SBIN/log/$i
  done
fi

REL=`cat $SBINS/version.txt | cut -f1 -d'.'`.`date +%m.%d`
echo "$REL"                              > $SBINS/version.txt
echo "#Oracle_Sid:User:Passwd"           > $SBINS/.passwd
echo "#-------------------------------" >> $SBINS/.passwd
if [ -f smenu_tar.tar ];then
    rm smenu_tar.tar
fi
tar cvf smenu_tar.tar ./${SMENU_DIR} install.sh ./addpar.tail ./README.txt
#gzip -f smenu_tar.tar
echo
echo

echo $NN " restoring smenu.env : $NC"
VAR=`cat $SBINS/version.txt`
NEW_VERS="VERSION=$VAR"
OLD_VERS=`grep -n "VERSION=" $WRK_DIR/smenu.env`
if [ $? -eq 0 ] ;then
   cat $WRK_DIR/smenu.env |  sed 's/VERSION=.*/'$NEW_VERS'/' >  $SBIN/smenu.env
else
   cp -p $WRK_DIR/smenu.env $SBIN/smenu.env
   echo "VERSION=$VERSION" >> $SBIN/smenu.env
fi
echo "ok"


cp -p $WRK_DIR/scripts/.passwd $SBINS/.passwd 
chmod 600 $SBINS/.passwd
echo "ok"

rm $MK_DIR/install.sh $MK_DIR/addpar.tail $MK_DIR/README.txt
cp -p $SBINS/wpar.sh $MK_DIR/wpar_sh.txt
echo "# Generated by smenu version : $VERSION" >> $MK_DIR/wpar_sh.txt
echo "#................................................................................................" >> $MK_DIR/wpar_sh.txt
cat $SBIN/data/smenu_what_is_it.txt >> $MK_DIR/wpar_sh.txt

ls -l ./smenu_tar
ls -l ./wpar_sh.txt

echo "Restoring smenu/tmp"
for i in `ls $WRK_DIR/tmp`
  do
   mv $WRK_DIR/tmp/$i $SBIN/tmp
done

echo "Restoring smenu/data"
for i in `ls $WRK_DIR/data`
  do
   mv $WRK_DIR/data/$i $SBIN/data
done

echo "Restoring local module if exists"
local_module_list=`ls -d $WRK_DIR/module[4-9]`
if [ -n "$local_module_list" ];then
   for mod in $local_module_list
   do
       mv  $mod $SBIN
   done
fi
